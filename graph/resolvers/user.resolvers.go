package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.27

import (
	"context"
	"fmt"
	"gql-go/graph/model"
)

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, email string, password string) (*model.Session, error) {
	panic(fmt.Errorf("not implemented: Login - login"))
}

// Logout is the resolver for the logout field.
func (r *mutationResolver) Logout(ctx context.Context) (bool, error) {
	panic(fmt.Errorf("not implemented: Logout - logout"))
}

// Register is the resolver for the register field.
func (r *mutationResolver) Register(ctx context.Context, email string, password string, username string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: Register - register"))
}

// Session is the resolver for the session field.
func (r *queryResolver) Session(ctx context.Context) (*model.Session, error) {
	panic(fmt.Errorf("not implemented: Session - session"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
